======== Function Tests ========
======= 101-lazy_matrix_mul.py =======

-------- ImportFunction --------
        >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

======== Test Cases: ========

-----------------------------

        >>> lazy_matrix_mul([[1, 2], [3, 4]], [[2, 0], [1, 2]])
        array([[ 4,  4],
                [10,  8]])

-----------------------------

        >>> lazy_matrix_mul([[1, 1], [1, 1]], [[1, 1], [1, 1]])
        array([[2, 2],
           [2, 2]])

-----------------------------

        >>> lazy_matrix_mul([[-2.0, -3.0]], [[-2.0], [-4.0]])
        array([[16.]])

-----------------------------

        >>> lazy_matrix_mul([[]], [[4, 2], [3, 6]])
        Traceback (most recent call last):
        ...
        ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

-----------------------------

        >>> lazy_matrix_mul([[4, 2], [3, 6]], [[]])
        Traceback (most recent call last):
        ...
        ValueError: m_b can't be empty

-----------------------------

        >>> lazy_matrix_mul([[5, 6], [7, 8, 9, 10]], [[1, 2], [3, 4]])
        Traceback (most recent call last):
        ...
        TypeError: each row of m_a must be of the same size
        
-----------------------------

        >>> lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8, 9, 10]])
        Traceback (most recent call last):
        ...
        TypeError: each row of m_b must be of the same size

-----------------------------

        >>> lazy_matrix_mul([["First"], ["Test"]], [["Last"], ["Test"]])
        Traceback (most recent call last):
        ...
        TypeError: m_a should contain only integers or floats

-----------------------------

        >>> lazy_matrix_mul((1, 2, 3, 4), [[5, 6], [7, 8,]])
        Traceback (most recent call last):
        ...
        ValueError: shapes (4,) and (2,2) not aligned: 4 (dim 0) != 2 (dim 0)

-----------------------------